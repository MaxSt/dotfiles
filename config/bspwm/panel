#! /bin/sh
mydir="$(dirname $0)"
. $mydir/panel_fifo
. $mydir/colors
PANEL_HEIGHT=16
PANEL_UNDERLINE_SIZE=2
PANEL_FONT_FAMILY="-*-tamsyn-medium-*-*--13-*-*-*-*-*-1"
PANEL_ICON_FONT_FAMILY="-wuncon-siji-medium-r-normal--10-100-75-75-c-80-iso10646-1"

if [ $(pgrep -cx panel) -gt 1 ] ; then
  printf "%s\n" "The panel is already running." >&2
  exit 1
fi

trap 'trap - TERM; kill 0' INT TERM QUIT EXIT

[ -e "$PANEL_FIFO" ] && rm "$PANEL_FIFO"
mkfifo "$PANEL_FIFO"

# workspaces (W)
bspc control --subscribe > "$PANEL_FIFO" &

# ram usage (R)
#free -m -s 2 | awk '/-/ {print "R" $3}' > "$PANEL_FIFO" &

# date and time (T)
clock -sf 'T%a, %d.%m.%y, %H:%M ' > "$PANEL_FIFO" &

# battery
battery -sf 'B%s %i' > "$PANEL_FIFO" || echo 'BCharging 100' > "$PANEL_FIFO" &

# current window title (A)
xtitle -sf 'A%s' > "$PANEL_FIFO" &

# volume (V)
# while true; do
#   printf "V%s\n" $(amixer | if grep -q "off"; then echo "mute"; else echo $(amixer | awk '/Front Left: Playback/ {print $5}' | sed 's/\[//g;s/\]//g');fi) > "$PANEL_FIFO"
#   sleep 0.5s;
# done &

# start bar with input from fifo piped through panel_bar and then start stalonetray
cat "$PANEL_FIFO" | $mydir/panel_bar | lemonbar -p -g x$PANEL_HEIGHT -f "$PANEL_FONT_FAMILY" -f "$PANEL_ICON_FONT_FAMILY" -F "$PANEL_FOREGROUND" -B "$PANEL_BACKGROUND" -u $PANEL_UNDERLINE_SIZE | \
  while read -r line; do
    eval "$line";
  done &
sleep 1
stalonetray &


wait

