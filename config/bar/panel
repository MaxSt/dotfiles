#! /bin/sh

export PANEL_FIFO=/tmp/panel-fifo

if [ $(pgrep -cx pannel) -gt 1 ] ; then
printf "%s\n" "The panel is already running." >&2
exit 1
fi

trap 'trap - TERM; kill 0' INT TERM QUIT EXIT

[ -e "$PANEL_FIFO" ] && rm "$PANEL_FIFO"
mkfifo "$PANEL_FIFO"

#clock -sf 'T%a %H:%M' > "$PANEL_FIFO" &

# workspaces (W)
bspc control --subscribe > "$PANEL_FIFO" &

# battery (B)
# watch -n 5 acpi --battery | awk '{gsub(/,/, "");} {printf "B" $4}' | sed 's/%//' > "$PANEL_FIFO" &


# ram usage (R)
#free -m -s 2 | awk '/-/ {print "R" $3}' > "$PANEL_FIFO" &

# date and time (T)
panel_date(){
  while true; do
    date "+T%H:%M:%S  %d.%m.%y" > "$PANEL_FIFO" &
    sleep 1s;
  done &
}

# volume (V)
panel_volume(){
  while true; do
    amixer | if grep -q "off"; then echo "mute"; else echo $(amixer | awk '/Front Left: Playback/ {print $5}' | sed 's/\[//g;s/\]//g' | sed 's/^/V/');fi > "$PANEL_FIFO" &
    sleep 0.3s;
  done &
}

panel_app(){
  while true; do
    xprop -id $(xprop -root 32x '\t$0' _NET_ACTIVE_WINDOW | cut -f 2) WM_CLASS | awk '{print $4}' | sed 's/"//g' | sed 's/^/A/' > "$PANEL_FIFO" &
    sleep 0.3s;
  done &
}

$(panel_app) &
$(panel_date) &
$(panel_volume) &

#app title (A)
#watch -n 0.3 ~/.config/bar/scripts/app > "$PANEL_FIFO" &
#~/.config/bar/scripts/app > "$PANEL_FIFO" &

. ~/.config/bar/panel_colors

cat "$PANEL_FIFO" | ~/.config/bar/panel_bar | bar -g x12 -F "$COLOR_FOREGROUND" -B "$COLOR_BACKGROUND" -f "-*-tewi-medium-*-*-*-11-*-*-*-*-*-*-*" &

wait
